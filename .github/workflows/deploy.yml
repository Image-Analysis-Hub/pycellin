# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_wheel:
    name: Build Wheel
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade build

    - name: Pip build pycellin
      run: |
        python -m pip install build
        
    - uses: actions/upload-artifact@v4
      with:
        path: dist/*.whl
        name: artifacts-wheel

  build_sdist:
    name: Build Source Distribution
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade build

      - name: Build sdist
        run: |
          python -m build --sdist

      - uses: actions/upload-artifact@v4
        with:
          path: dist/*.tar.gz
          name: artifacts-sdist

  upload_all:
    name: Publish to PyPI
    needs: [build_wheel, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && success()

    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with: 
          name: artifacts-*
          path: dist
          merge: true

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true
          verbose: true
